"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[5347],{7183:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"Introduction/getting_started","title":"Getting Started","description":"This guide is currently a generic best practice document that applies across most of the existing mint implementations.","source":"@site/docs/01-Introduction/getting_started.md","sourceDirName":"01-Introduction","slug":"/Introduction/getting_started","permalink":"/cashu-mint-docs/docs/Introduction/getting_started","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2},"sidebar":"tutorialSidebar","next":{"title":"Ongoing Monitoring and Maintenance","permalink":"/cashu-mint-docs/docs/Introduction/ongoingcare"}}');var o=t(4848),r=t(8453);const s={sidebar_position:2},a="Getting Started",c={},d=[{value:"Knowledge Requirements",id:"knowledge-requirements",level:2},{value:"Hardware Requirements",id:"hardware-requirements",level:2},{value:"Choosing your Lightning Backend",id:"choosing-your-lightning-backend",level:2},{value:"Best Practice: Run Your Own Lightning Node",id:"best-practice-run-your-own-lightning-node",level:3},{value:"Other Custodial Backends",id:"other-custodial-backends",level:3},{value:"Care of Lightning Node",id:"care-of-lightning-node",level:3}];function h(e){const n={a:"a",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsx)(n.h1,{id:"getting-started",children:"Getting Started"})}),"\n",(0,o.jsx)(n.p,{children:"This guide is currently a generic best practice document that applies across most of the existing mint implementations."}),"\n",(0,o.jsx)(n.h2,{id:"knowledge-requirements",children:"Knowledge Requirements"}),"\n",(0,o.jsx)(n.p,{children:"To run a mint safely and seccurely, and protect your mint's users, you should have knowledge of the following:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"Networking"}),"\n",(0,o.jsx)(n.li,{children:"Security"}),"\n",(0,o.jsx)(n.li,{children:"Care and Feeding of Your Lightning Node"}),"\n"]}),"\n",(0,o.jsx)(n.h2,{id:"hardware-requirements",children:"Hardware Requirements"}),"\n",(0,o.jsx)(n.p,{children:"Mints are pretty lightweight in their systm requirements.  However, Docker and Keycloak can consume resources, and should be run on a separate machine."}),"\n",(0,o.jsx)(n.h2,{id:"choosing-your-lightning-backend",children:"Choosing your Lightning Backend"}),"\n",(0,o.jsx)(n.p,{children:"Cashu works with Bitcoin, and particularly with Lightning.\nTo mint (create) and melt (destroy) ecash, you need to plug your mint into a Lightning backend."}),"\n",(0,o.jsx)(n.h3,{id:"best-practice-run-your-own-lightning-node",children:"Best Practice: Run Your Own Lightning Node"}),"\n",(0,o.jsx)(n.p,{children:"The best practice is to run your own dedicated Lightning node, such as LND or CLN. Running a Lightning node comes with its own responsibilities."}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"make sure that you properly back up your seed phrase"}),"\n",(0,o.jsx)(n.li,{children:"regularly export your static channel backups,"}),"\n",(0,o.jsx)(n.li,{children:"ideally, have a copy of your node's database in case of a catastrophic incident."}),"\n"]}),"\n",(0,o.jsx)(n.p,{children:"These are all things that apply to Lightning nodes, with or without ecash. You should be aware of these things whenever you run a Lightning node. This will help to assume your setup is safe and you have enough experience keeping your node happy and alive."}),"\n",(0,o.jsx)(n.h3,{id:"other-custodial-backends",children:"Other Custodial Backends"}),"\n",(0,o.jsx)(n.p,{children:"Mints also work with custodial backends. This is great for getting started quickly, to experiment or to run a mint for a temporary event, such as a conference. Supported custodial back-ends may include a Strike or Blink account, or use of an LNbits wallet of your choice to hook it up to a  mint."}),"\n",(0,o.jsx)(n.h3,{id:"care-of-lightning-node",children:"Care of Lightning Node"}),"\n",(0,o.jsx)(n.p,{children:"Whichever method you choose, you absolutely need to make sure that the balance on your Lightning backend always exceeds the amount of ecash that you have issued."}),"\n",(0,o.jsx)(n.p,{children:"Do not, under any circumstance, repeat the same mistakes of the banking system by running a fractional reserve mint. You will run into terrible issues once your users start making Lightning payments and withdrawing their ecash."}),"\n",(0,o.jsxs)(n.p,{children:["It's best if you can provide up-to-date proof of reserves reports to your users combined with a proof of liabilities for the ecash you're issuing (see ",(0,o.jsx)(n.a,{href:"https://gist.github.com/callebtc/ed5228d1d8cbaade0104db5d1cf63939",children:'"A Proof of Liabilities Scheme for Ecash Mints"'})," for more on this)."]})]})}function u(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(h,{...e})}):h(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>a});var i=t(6540);const o={},r=i.createContext(o);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);